// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TPPizza.Web.DataAccessLayer;

#nullable disable

namespace TPPizza.Web.Migrations
{
    [DbContext(typeof(PizzeriaDbContext))]
    [Migration("20240716105334_AddUniquePizzaName")]
    partial class AddUniquePizzaName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PizzaIngredients", b =>
                {
                    b.Property<long>("PizzaId")
                        .HasColumnType("bigint");

                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint");

                    b.HasKey("PizzaId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("PizzaIngredients");
                });

            modelBuilder.Entity("TPPizza.Web.DataAccessLayer.Entity.Dough", b =>
                {
                    b.Property<long>("DoughId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DoughId"));

                    b.Property<string>("DoughName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("DoughId");

                    b.ToTable("Doughs");
                });

            modelBuilder.Entity("TPPizza.Web.DataAccessLayer.Entity.Ingredient", b =>
                {
                    b.Property<long>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IngredientId"));

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("TPPizza.Web.DataAccessLayer.Entity.Pizza", b =>
                {
                    b.Property<long>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PizzaId"));

                    b.Property<long>("DoughId")
                        .HasColumnType("bigint");

                    b.Property<string>("PizzaName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("PizzaId");

                    b.HasIndex("DoughId");

                    b.HasIndex("PizzaName")
                        .IsUnique();

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("PizzaIngredients", b =>
                {
                    b.HasOne("TPPizza.Web.DataAccessLayer.Entity.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TPPizza.Web.DataAccessLayer.Entity.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TPPizza.Web.DataAccessLayer.Entity.Pizza", b =>
                {
                    b.HasOne("TPPizza.Web.DataAccessLayer.Entity.Dough", "Dough")
                        .WithMany("Pizzas")
                        .HasForeignKey("DoughId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dough");
                });

            modelBuilder.Entity("TPPizza.Web.DataAccessLayer.Entity.Dough", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
